# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'dockerProj-1/pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: CopyFiles@2
  inputs: 
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**/target/*.?(war|jar)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '*.json'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'



- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: Docker@2
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure Pass - Sponsorship (d9328439-9ca6-4ee4-9e8d-86d4951f9a13)'
    subscriptionId: 'd9328439-9ca6-4ee4-9e8d-86d4951f9a13'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'ACIDeployRG'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: 'deployacr.json'
    deploymentMode: 'Incremental'